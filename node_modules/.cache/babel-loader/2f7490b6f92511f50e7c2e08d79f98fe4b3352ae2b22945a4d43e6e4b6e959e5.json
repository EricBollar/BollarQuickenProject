{"ast":null,"code":"var _jsxFileName = \"/Users/ericbollar/Desktop/BollarQuickenProject/src/Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { useKeyboard } from './hooks/useKeyboard';\nimport { Turtle } from './Turtle';\nimport styles from './styles.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Canvas = _ref => {\n  _s();\n  let {\n    turtleX,\n    turtleY\n  } = _ref;\n  // dimensions of canvas\n  const width = 800;\n  const height = 480;\n\n  // this allows us to access the graphics context\n  const canvasRef = useRef(null);\n  function drawLine(length, x0, y0, angle, lineWidth, penColor) {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const angleInRadians = angle * Math.PI / 180;\n    let x1 = x0 + length * Math.sin(angleInRadians);\n    let y1 = y0 + length * Math.cos(angleInRadians);\n    ctx.beginPath();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = penColor;\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(0, 0);\n    // ctx.lineTo(x1, y1);\n    ctx.stroke();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...styles.canvasWrapper,\n      width: width + 2,\n      height: height + 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.turtle,\n        left: props.turtleX,\n        top: props.turtleY,\n        transform: `rotate(${t.angle}DEG)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n_s(Canvas, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n_c = Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useKeyboard","Turtle","styles","Canvas","turtleX","turtleY","width","height","canvasRef","drawLine","length","x0","y0","angle","lineWidth","penColor","canvas","current","ctx","getContext","angleInRadians","Math","PI","x1","sin","y1","cos","beginPath","strokeStyle","moveTo","lineTo","stroke","canvasWrapper","turtle","left","props","top","transform","t"],"sources":["/Users/ericbollar/Desktop/BollarQuickenProject/src/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport { useKeyboard } from './hooks/useKeyboard';\nimport { Turtle } from './Turtle';\nimport styles from './styles.js';\n\nexport const Canvas = ({turtleX, turtleY}) => {\n\n    // dimensions of canvas\n    const width = 800;\n    const height = 480;\n\n    // this allows us to access the graphics context\n    const canvasRef = useRef(null)\n\n    function drawLine(length, x0, y0, angle, lineWidth, penColor) {\n        const canvas = canvasRef.current\n        const ctx = canvas.getContext('2d')\n\n        const angleInRadians = (angle * Math.PI) / 180;\n        let x1 = x0 + length * Math.sin(angleInRadians);\n        let y1 = y0 + length * Math.cos(angleInRadians);\n        ctx.beginPath();\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = penColor;\n        ctx.moveTo(x0, y0);\n        ctx.lineTo(0, 0);\n        // ctx.lineTo(x1, y1);\n        ctx.stroke();\n    }\n    \n    return <div style={{...styles.canvasWrapper, width: width + 2, height: height + 2 }}>\n        <div\n            style={{\n                ...styles.turtle,\n                left: props.turtleX,\n                top: props.turtleY,\n                transform: `rotate(${t.angle}DEG)`,\n            }}\n        />\n        <canvas ref={canvasRef}/>\n    </div>\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,MAAM,MAAM,aAAa;AAAC;AAEjC,OAAO,MAAMC,MAAM,GAAG,QAAwB;EAAA;EAAA,IAAvB;IAACC,OAAO;IAAEC;EAAO,CAAC;EAErC;EACA,MAAMC,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;;EAElB;EACA,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE9B,SAASW,QAAQ,CAACC,MAAM,EAAEC,EAAE,EAAEC,EAAE,EAAEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAE;IAC1D,MAAMC,MAAM,GAAGR,SAAS,CAACS,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,cAAc,GAAIP,KAAK,GAAGQ,IAAI,CAACC,EAAE,GAAI,GAAG;IAC9C,IAAIC,EAAE,GAAGZ,EAAE,GAAGD,MAAM,GAAGW,IAAI,CAACG,GAAG,CAACJ,cAAc,CAAC;IAC/C,IAAIK,EAAE,GAAGb,EAAE,GAAGF,MAAM,GAAGW,IAAI,CAACK,GAAG,CAACN,cAAc,CAAC;IAC/CF,GAAG,CAACS,SAAS,EAAE;IACfT,GAAG,CAACJ,SAAS,GAAGA,SAAS;IACzBI,GAAG,CAACU,WAAW,GAAGb,QAAQ;IAC1BG,GAAG,CAACW,MAAM,CAAClB,EAAE,EAAEC,EAAE,CAAC;IAClBM,GAAG,CAACY,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAChB;IACAZ,GAAG,CAACa,MAAM,EAAE;EAChB;EAEA,oBAAO;IAAK,KAAK,EAAE;MAAC,GAAG7B,MAAM,CAAC8B,aAAa;MAAE1B,KAAK,EAAEA,KAAK,GAAG,CAAC;MAAEC,MAAM,EAAEA,MAAM,GAAG;IAAE,CAAE;IAAA,wBAChF;MACI,KAAK,EAAE;QACH,GAAGL,MAAM,CAAC+B,MAAM;QAChBC,IAAI,EAAEC,KAAK,CAAC/B,OAAO;QACnBgC,GAAG,EAAED,KAAK,CAAC9B,OAAO;QAClBgC,SAAS,EAAG,UAASC,CAAC,CAACzB,KAAM;MACjC;IAAE;MAAA;MAAA;MAAA;IAAA,QACJ,eACF;MAAQ,GAAG,EAAEL;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACvB;AACV,CAAC;AAAA,GApCYL,MAAM;AAAA,KAANA,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}