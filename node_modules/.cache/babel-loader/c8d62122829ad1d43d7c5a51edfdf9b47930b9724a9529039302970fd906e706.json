{"ast":null,"code":"var _jsxFileName = \"/Users/ericbollar/Desktop/BollarQuickenProject/src/TurtleGame.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { useKeyboard } from './hooks/useKeyboard';\nimport { Turtle } from './Turtle';\nimport styles from './styles.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TurtleGame = props => {\n  _s();\n  // grab deconstruct turtle values\n  const {\n    x,\n    y,\n    angle,\n    penDown,\n    penColor,\n    lineWidth\n  } = Turtle();\n\n  // grab deconstructed list of actions from keyboard listener\n  const {\n    moveForward,\n    turnLeft,\n    turnRight,\n    penIsDown,\n    drawingStar\n  } = useKeyboard();\n\n  // dimensions of canvas\n  const width = 800;\n  const height = 480;\n\n  // this allows us to access the graphics context\n  const canvasRef = useRef(null);\n\n  // this is our game loop\n  const draw = (ctx, frameCount) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = '#000000';\n    ctx.beginPath();\n    ctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n    ctx.fill();\n    console.log(moveForward);\n  };\n  useEffect(() => {\n    // get the graphics context\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId;\n\n    // draw the current frame\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]); // called when draw changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      ...styles.canvasWrapper,\n      width: width + 2,\n      height: height + 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.turtle,\n        left: x,\n        top: y,\n        transform: `rotate(${angle}DEG)`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 12\n  }, this);\n};\n_s(TurtleGame, \"V84IAGGIVSqZp0xHVbCROK5ytSw=\", false, function () {\n  return [useKeyboard];\n});\n_c = TurtleGame;\nexport default TurtleGame;\nvar _c;\n$RefreshReg$(_c, \"TurtleGame\");","map":{"version":3,"names":["React","useRef","useEffect","useKeyboard","Turtle","styles","TurtleGame","props","x","y","angle","penDown","penColor","lineWidth","moveForward","turnLeft","turnRight","penIsDown","drawingStar","width","height","canvasRef","draw","ctx","frameCount","clearRect","canvas","fillStyle","beginPath","arc","Math","sin","PI","fill","console","log","current","context","getContext","animationFrameId","render","window","requestAnimationFrame","cancelAnimationFrame","canvasWrapper","turtle","left","top","transform"],"sources":["/Users/ericbollar/Desktop/BollarQuickenProject/src/TurtleGame.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport { useKeyboard } from './hooks/useKeyboard';\nimport { Turtle } from './Turtle';\nimport styles from './styles.js';\n\nconst TurtleGame = props => {\n\n    // grab deconstruct turtle values\n    const {x, y, angle, penDown, penColor, lineWidth} = Turtle();\n\n    // grab deconstructed list of actions from keyboard listener\n    const {moveForward, turnLeft, turnRight, penIsDown, drawingStar} = useKeyboard();\n\n    // dimensions of canvas\n    const width = 800;\n    const height = 480;\n\n    // this allows us to access the graphics context\n    const canvasRef = useRef(null)\n    \n    // this is our game loop\n    const draw = (ctx, frameCount) => {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n        ctx.fillStyle = '#000000'\n        ctx.beginPath()\n        ctx.arc(50, 100, 20*Math.sin(frameCount*0.05)**2, 0, 2*Math.PI)\n        ctx.fill()\n        console.log(moveForward);\n    }\n    \n    useEffect(() => {\n        // get the graphics context\n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        let frameCount = 0\n        let animationFrameId\n        \n        // draw the current frame\n        const render = () => {\n            frameCount++\n            draw(context, frameCount)\n            animationFrameId = window.requestAnimationFrame(render)\n        }\n        render()\n        \n        return () => {\n            window.cancelAnimationFrame(animationFrameId)\n        }\n    }, [draw]) // called when draw changes\n    \n    return <div style={{...styles.canvasWrapper, width: width + 2, height: height + 2 }}>\n        <div\n            style={{\n                ...styles.turtle,\n                left: x,\n                top: y,\n                transform: `rotate(${angle}DEG)`,\n            }}\n        />\n        <canvas ref={canvasRef} {...props}/>\n    </div>\n}\n\nexport default TurtleGame"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,MAAM,MAAM,aAAa;AAAC;AAEjC,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAAA;EAExB;EACA,MAAM;IAACC,CAAC;IAAEC,CAAC;IAAEC,KAAK;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGT,MAAM,EAAE;;EAE5D;EACA,MAAM;IAACU,WAAW;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAAW,CAAC,GAAGf,WAAW,EAAE;;EAEhF;EACA,MAAMgB,KAAK,GAAG,GAAG;EACjB,MAAMC,MAAM,GAAG,GAAG;;EAElB;EACA,MAAMC,SAAS,GAAGpB,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA,MAAMqB,IAAI,GAAG,CAACC,GAAG,EAAEC,UAAU,KAAK;IAC9BD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEF,GAAG,CAACG,MAAM,CAACP,KAAK,EAAEI,GAAG,CAACG,MAAM,CAACN,MAAM,CAAC;IACxDG,GAAG,CAACI,SAAS,GAAG,SAAS;IACzBJ,GAAG,CAACK,SAAS,EAAE;IACfL,GAAG,CAACM,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,GAACC,IAAI,CAACC,GAAG,CAACP,UAAU,GAAC,IAAI,CAAC,IAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAACM,IAAI,CAACE,EAAE,CAAC;IAC/DT,GAAG,CAACU,IAAI,EAAE;IACVC,OAAO,CAACC,GAAG,CAACrB,WAAW,CAAC;EAC5B,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ;IACA,MAAMwB,MAAM,GAAGL,SAAS,CAACe,OAAO;IAChC,MAAMC,OAAO,GAAGX,MAAM,CAACY,UAAU,CAAC,IAAI,CAAC;IACvC,IAAId,UAAU,GAAG,CAAC;IAClB,IAAIe,gBAAgB;;IAEpB;IACA,MAAMC,MAAM,GAAG,MAAM;MACjBhB,UAAU,EAAE;MACZF,IAAI,CAACe,OAAO,EAAEb,UAAU,CAAC;MACzBe,gBAAgB,GAAGE,MAAM,CAACC,qBAAqB,CAACF,MAAM,CAAC;IAC3D,CAAC;IACDA,MAAM,EAAE;IAER,OAAO,MAAM;MACTC,MAAM,CAACE,oBAAoB,CAACJ,gBAAgB,CAAC;IACjD,CAAC;EACL,CAAC,EAAE,CAACjB,IAAI,CAAC,CAAC,EAAC;;EAEX,oBAAO;IAAK,KAAK,EAAE;MAAC,GAAGjB,MAAM,CAACuC,aAAa;MAAEzB,KAAK,EAAEA,KAAK,GAAG,CAAC;MAAEC,MAAM,EAAEA,MAAM,GAAG;IAAE,CAAE;IAAA,wBAChF;MACI,KAAK,EAAE;QACH,GAAGf,MAAM,CAACwC,MAAM;QAChBC,IAAI,EAAEtC,CAAC;QACPuC,GAAG,EAAEtC,CAAC;QACNuC,SAAS,EAAG,UAAStC,KAAM;MAC/B;IAAE;MAAA;MAAA;MAAA;IAAA,QACJ,eACF;MAAQ,GAAG,EAAEW,SAAU;MAAA,GAAKd;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AACV,CAAC;AAAA,GAxDKD,UAAU;EAAA,QAMuDH,WAAW;AAAA;AAAA,KAN5EG,UAAU;AA0DhB,eAAeA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}