{"ast":null,"code":"var _s = $RefreshSig$();\n// uses built-in react state to store actions\nimport { useCallback, useEffect, useState } from \"react\";\n\n// defines which keys relate to which actions\nfunction actionByKey(key) {\n  const keyActionMap = {\n    KeyW: 'KeyW',\n    KeyA: 'KeyA',\n    KeyD: 'KeyD',\n    Space: 'SPACE',\n    Digit1: 'Digit1'\n  };\n  return keyActionMap[key];\n}\nexport const useKeyboard = () => {\n  _s();\n  // set \"keydown\" variables that can use elsewhere\n  const [actions, setActions] = useState({\n    KeyW: false,\n    KeyA: false,\n    KeyD: false,\n    Space: false,\n    Digit1: false\n  });\n\n  // if key is pressed, set its action to true\n  const handleKeyDown = useCallback(e => {\n    const action = actionByKey(e.code);\n    if (action) {\n      setActions(prev => {\n        return {\n          ...prev,\n          [action]: true\n        };\n      });\n    }\n  }, []);\n\n  // if key is released, set its action to false\n  const handleKeyUp = useCallback(e => {\n    const action = actionByKey(e.code);\n    if (action) {\n      setActions(prev => {\n        return {\n          ...prev,\n          [action]: false\n        };\n      });\n    }\n  }, []);\n\n  // add eventlisteners on the page that use the above functions\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    document.addEventListener('keyup', handleKeyUp);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n      document.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [handleKeyDown, handleKeyUp]);\n\n  // export those action variables that were defined earlier\n  return actions;\n};\n_s(useKeyboard, \"A0gexlJCaVPsN/FkHK96LFAO9Mg=\");","map":{"version":3,"names":["useCallback","useEffect","useState","actionByKey","key","keyActionMap","KeyW","KeyA","KeyD","Space","Digit1","useKeyboard","actions","setActions","handleKeyDown","e","action","code","prev","handleKeyUp","document","addEventListener","removeEventListener"],"sources":["/Users/ericbollar/Desktop/BollarQuickenProject/src/hooks/useKeyboard.js"],"sourcesContent":["// uses built-in react state to store actions\nimport { useCallback, useEffect, useState } from \"react\"\n\n// defines which keys relate to which actions\nfunction actionByKey(key) {\n    const keyActionMap = {\n        KeyW: 'KeyW',\n        KeyA: 'KeyA',\n        KeyD: 'KeyD',\n        Space: 'SPACE',\n        Digit1: 'Digit1',\n    }\n    return keyActionMap[key];\n}\n\nexport const useKeyboard = () => {\n    // set \"keydown\" variables that can use elsewhere\n    const[actions, setActions] = useState({\n        KeyW: false,\n        KeyA: false,\n        KeyD: false,\n        Space: false,\n        Digit1: false,\n    })\n\n    // if key is pressed, set its action to true\n    const handleKeyDown = useCallback((e) => {\n        const action = actionByKey(e.code);\n        if (action) {\n            setActions((prev) => {\n                return({\n                    ...prev,\n                    [action]: true\n                })\n            })\n        }\n    }, [])\n\n    // if key is released, set its action to false\n    const handleKeyUp = useCallback((e) => {\n        const action = actionByKey(e.code);\n        if (action) {\n            setActions((prev) => {\n                return({\n                    ...prev,\n                    [action]: false\n                })\n            })\n        }\n    }, [])\n\n    // add eventlisteners on the page that use the above functions\n    useEffect(() => {\n        document.addEventListener('keydown', handleKeyDown);\n        document.addEventListener('keyup', handleKeyUp);\n        return () => {\n            document.removeEventListener('keydown', handleKeyDown);\n            document.removeEventListener('keyup', handleKeyUp);\n        }\n    }, [handleKeyDown, handleKeyUp])\n\n    // export those action variables that were defined earlier\n    return actions\n}"],"mappings":";AAAA;AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAExD;AACA,SAASC,WAAW,CAACC,GAAG,EAAE;EACtB,MAAMC,YAAY,GAAG;IACjBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE;EACZ,CAAC;EACD,OAAOL,YAAY,CAACD,GAAG,CAAC;AAC5B;AAEA,OAAO,MAAMO,WAAW,GAAG,MAAM;EAAA;EAC7B;EACA,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IAClCI,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,KAAK;IACXC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,KAAK;IACZC,MAAM,EAAE;EACZ,CAAC,CAAC;;EAEF;EACA,MAAMI,aAAa,GAAGd,WAAW,CAAEe,CAAC,IAAK;IACrC,MAAMC,MAAM,GAAGb,WAAW,CAACY,CAAC,CAACE,IAAI,CAAC;IAClC,IAAID,MAAM,EAAE;MACRH,UAAU,CAAEK,IAAI,IAAK;QACjB,OAAO;UACH,GAAGA,IAAI;UACP,CAACF,MAAM,GAAG;QACd,CAAC;MACL,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,WAAW,GAAGnB,WAAW,CAAEe,CAAC,IAAK;IACnC,MAAMC,MAAM,GAAGb,WAAW,CAACY,CAAC,CAACE,IAAI,CAAC;IAClC,IAAID,MAAM,EAAE;MACRH,UAAU,CAAEK,IAAI,IAAK;QACjB,OAAO;UACH,GAAGA,IAAI;UACP,CAACF,MAAM,GAAG;QACd,CAAC;MACL,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAf,SAAS,CAAC,MAAM;IACZmB,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEP,aAAa,CAAC;IACnDM,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEF,WAAW,CAAC;IAC/C,OAAO,MAAM;MACTC,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAER,aAAa,CAAC;MACtDM,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEH,WAAW,CAAC;IACtD,CAAC;EACL,CAAC,EAAE,CAACL,aAAa,EAAEK,WAAW,CAAC,CAAC;;EAEhC;EACA,OAAOP,OAAO;AAClB,CAAC;AAAA,GAhDYD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}